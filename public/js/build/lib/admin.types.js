/** @jsx React.DOM */define(function(){var e=React.createClass({displayName:"TypeForm",mixins:[React.addons.LinkedStateMixin],getInitialState:function(){return this.props.type},handleSubmit:function(e){e.preventDefault();var t=$(this.refs.nameInput.getDOMNode()).val(),n={duration:parseInt(this.state.duration,10)};$.ajax({type:"POST",url:pager.urls.ajax+"admin/type/"+t,data:JSON.stringify({type:n}),contentType:"application/json; charset=utf-8"}).done(this.props.reloadAll)},componentWillReceiveProps:function(e){this.setState(e.type)},killMe:function(e){e.preventDefault(),$.ajax({url:pager.urls.ajax+"admin/type/"+$(this.refs.nameInput.getDOMNode()).val(),type:"DELETE"}).done(this.props.reloadAll)},render:function(){return React.DOM.form({onSubmit:this.handleSubmit},React.DOM.div({className:"panel"},React.DOM.div({className:"row"},React.DOM.div({className:"medium-7 columns"},React.DOM.input({type:"text",name:"name",list:"UndefinedTypes",ref:"nameInput",required:!0,valueLink:this.linkState("name"),placeholder:"Nome"})),React.DOM.div({className:"medium-3 columns"},React.DOM.input({type:"number",min:0,name:"duration",ref:"durationInput",valueLink:this.linkState("duration"),placeholder:"Minutos"})),React.DOM.div({className:"medium-1 columns"},React.DOM.button({className:"fi-save button postfix success"})),React.DOM.div({className:"medium-1 columns"},this.state._id?React.DOM.button({className:"fi-x button postfix alert",onClick:this.killMe}):null))))}}),t=React.createClass({displayName:"Types",getInitialState:function(){return{availableTypes:[],defaultType:{name:"",duration:30},undefinedTypes:[]}},reloadTypes:function(){$.get(pager.urls.ajax+"admin/types").done(function(e){if(!this.isMounted())return;this.setState({availableTypes:e},this.loadUndefinedTypes)}.bind(this))},componentDidMount:function(){this.reloadTypes()},loadUndefinedTypes:function(){$.get(pager.urls.ajax+"admin/undefined/types").done(function(e){if(!this.isMounted())return;this.setState({undefinedTypes:_.filter(e,function(e){return!_.find(this.state.availableTypes,{name:e})}.bind(this))})}.bind(this))},render:function(){return React.DOM.div(null,React.DOM.datalist({id:"UndefinedTypes"},this.state.undefinedTypes.map(function(e){return React.DOM.option({key:e,value:e})})),this.state.availableTypes.map(function(t){return e({type:t,key:t._id,reloadAll:this.reloadTypes})}.bind(this)),e({type:this.state.defaultType,reloadAll:this.reloadTypes}))}});return t});