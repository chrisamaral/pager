define(function(){function k(a){_.forEach(a,function(a){a.close()});for(var d in a)a.hasOwnProperty(d)&&delete a[d]}var h;return React.createClass({displayName:"Map",getInitialState:function(){return{markers:[],infoW:{}}},massTaskMarker:function(a){_.forEach(a,function(a){void 0===a.marker&&void 0!==a.location&&(a.marker=new google.maps.Marker({title:a.address.address,map:pager.console.map,icon:"/icons/default_marker.png",position:new google.maps.LatLng(a.location.lat,a.location.lng)}),google.maps.event.addListener(a.marker,
"click",function(){var b=$('[data-task="'+a._id+'"]'),c=document.getElementById("ScrollRoot");b.length&&b.is(":visible")&&$(c).animate({scrollTop:c.scrollTop+b.offset().top-$(c).offset().top-10});this.props.setTaskFocus(a._id)}.bind(this)))},this);return a},selectedTaskClick:function(a){function d(){b[a._id].close();delete b[a._id];this.setState({infoW:b})}var b=this.state.infoW,c,e;if(b[a._id])return d.call(this);c=$('<div class="consoleInfoWindow">');e=$('[data-task="'+a.task._id+'"]');e.length&&
e.is(":visible")?c.append("<p>"+a.task.address.address+"</p>"):c.append(React.renderComponentToString(h({attrs:a.task.attrs})));c.append($("<p>").append($('<a title="Ver todos"><i class="fi-arrow-left"></i></a>').click(function(){this.props.setTaskFocus(a._id);d.call(this)}.bind(this))));b[a._id]=new google.maps.InfoWindow({content:c[0]});b[a._id].open(pager.console.map,a.marker);this.setState({infoW:b});google.maps.event.addListener(b[a._id],"closeclick",function(){var b=this.state.infoW;delete b[a._id];
this.setState({infoW:b})}.bind(this))},filterTasks:function(a){var d=[],b=this.state.markers;a.mapState!==pager.constant.console.map.ROUTER_PROJECTION&&a.queries.forEach(function(c){c.tasks.forEach(function(e){if(e.location){var c={_id:e._id},g=_.findIndex(b,c),f=b[g];c.location=e.location;c.address=e.address;c.task=e;f&&f.marker&&(a.mapState===pager.constant.console.map.AVAILABLE_TASKS&&!f.hasSelectedMarker||a.mapState===pager.constant.console.map.SELECTED_TASK&&f.hasSelectedMarker&&f._id===a.selectedTask?
c.marker=f.marker:(f.marker.setMap(null),delete f.marker));d.push(c);0<=g&&b.splice(g,1)}}.bind(this))}.bind(this));b.forEach(function(a){a.marker&&a.marker.setMap(null)});return d},updateMapView:function(a){h=h||pager.components.AttrTable;a=a||this.props;var d=this.state.infoW,b,c=this,e;console.log("update map view");switch(a.mapState){case pager.constant.console.map.AVAILABLE_TASKS:b=this.filterTasks(a);b=this.massTaskMarker(b);break;case pager.constant.console.map.SELECTED_TASK:b=this.filterTasks(a);
if(e=_.find(b,{_id:a.selectedTask}))e.hasSelectedMarker=!0,e.marker||(a=new google.maps.LatLng(e.location.lat,e.location.lng),e.marker=new google.maps.Marker({title:e.address.address,map:pager.console.map,icon:"/icons/selected_marker.png",position:a}),pager.console.map.panTo(a),k(d),this.selectedTaskClick(e),google.maps.event.addListener(e.marker,"click",function(){this.selectedTaskClick(e)}.bind(this)));break;case pager.constant.console.map.ROUTER_PROJECTION:b=this.filterTasks(a),k(d),b=a.routerWorker.wayPoints.map(function(a){a.marker=
new google.maps.Marker({map:pager.console.map,icon:"/icons/fixed_marker.png",position:new google.maps.LatLng(a.location.lat,a.location.lng)});google.maps.event.addListener(a.marker,"click",function(){d[a.id]?(d[a.id].close(),delete d[a.id],c.setState({infoW:d})):(d[a.id]=new google.maps.InfoWindow({content:$('<div class="consoleInfoWindow">').append(React.renderComponentToString(h({attrs:a.attrs})))[0]}),d[a.id].open(pager.console.map,a.marker),c.setState({infoW:d}),google.maps.event.addListener(d[a.id],
"closeclick",function(){var b=c.state.infoW;delete b[a.id];c.setState({infoW:b})}))});return a})}this.setState({markers:b,infoW:d})},componentDidMount:function(){var a={zoom:8,center:new google.maps.LatLng(-22.848658,-43.300933),zoomControl:!1,panControl:!1,scaleControl:!1,streetViewControl:!0,streetViewControlOptions:{position:google.maps.ControlPosition.RIGHT_BOTTOM}},d=this,b=function(a){if(d.isMounted()){var b,g,f;g=$("#Console");a=a&&a.currentTarget?a.currentTarget:document.getElementById("ScrollRoot");
b=$(window).height();f=Math.max(0,g.position().top-a.scrollTop);g={top:a.scrollTop?f:g.position().top,width:g.width(),height:a.scrollTop?b-f:d.props.height};$(d.getDOMNode()).css(g)}else $("#ScrollRoot").off("scroll",c),$(window).off("resize",c)},c=_.throttle(b,100);$("#ScrollRoot").on("scroll",c);$(window).on("resize",c);b();pager.console=pager.console||{};pager.console.map=new google.maps.Map(this.refs.mapContainer.getDOMNode(),a);setTimeout(function(){this.updateMapView()}.bind(this),1E3)},componentWillReceiveProps:function(a){this.updateMapView(a)},
render:function(){return React.DOM.div({id:"ConsoleMainMap"},React.DOM.div({ref:"mapContainer"}))}})});
