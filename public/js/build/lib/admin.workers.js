define(function(){var d=React.createClass({displayName:"UserSelector",render:function(){return React.DOM.select({defaultValue:this.props.selected||""},React.DOM.option({value:""},"########## Nenhum #########"),this.props.users.map(function(a){return React.DOM.option({key:a.id,value:a.id},a.name)}))}}),c=React.createClass({displayName:"EditWorkerForm",getInitialState:function(){return{locked:!1}},selectUser:function(a){a=_.find(this.props.users,{id:a});var b=this.refs.workerName.getDOMNode();a&&""===
b.name&&(b.value=a.name)},handleSubmit:function(a){a.preventDefault();a={sys_id:this.refs.sys_id.getDOMNode().value,name:this.refs.name.getDOMNode().value,user_id:this.refs.user_id.getDOMNode().value};this.props.worker._id&&(a._id=this.props.worker._id);this.setState({locked:!0});this.props.saveWorker(a).always(function(){this.isMounted()&&this.setState({locked:!1})}.bind(this)).done(function(){this.isMounted()&&!this.props.worker._id&&(this.refs.sys_id.getDOMNode().value=this.props.worker.sys_id,
this.refs.name.getDOMNode().value=this.props.worker.name,this.refs.user_id.getDOMNode().value=this.props.worker.user_id)}.bind(this)).fail(function(){this.isMounted()&&$(this.getDOMNode()).prepend(React.renderComponentToStaticMarkup(React.DOM.div({"data-alert":!0,className:"radius alert alert-box"},"Erro, n\u00e3o foi poss\u00edvel salvar.",React.DOM.a({href:"#",className:"close"},"\u00d7")))).foundation()}.bind(this))},killMe:function(a){a.preventDefault();this.props.deleteWorker(this.props.worker._id)},
render:function(){return React.DOM.div({className:"panel"},React.DOM.form({onSubmit:this.handleSubmit},React.DOM.div({className:"row"},React.DOM.div({className:"small-4 large-3 columns"},React.DOM.label(null,"C\u00f3digo",React.DOM.input({type:"text",placeholder:"###",ref:"sys_id",defaultValue:this.props.worker.sys_id}))),React.DOM.div({className:"small-8 large-9 columns"},React.DOM.label(null,"Nome",React.DOM.input({type:"text",ref:"workerName",required:!0,placeholder:"Nome",ref:"name",defaultValue:this.props.worker.name})))),
React.DOM.div({className:"row"},React.DOM.div({className:"large-12 columns"},React.DOM.label(null,"Usu\u00e1rio Associado",d({ref:"user_id",selected:this.props.worker.user_id,users:this.props.users,selectUser:this.selectUser})))),React.DOM.div({className:"row"},React.DOM.div({className:"large-12 columns text-right"},this.state.locked?React.DOM.strong(null,"Carregando..."):React.DOM.div({className:"AdmWBtRow"},React.DOM.button({className:"small buton success"},"Salvar"),this.props.deleteWorker?React.DOM.button({onClick:this.killMe,
className:"small button alert"},"Remover"):null)))))}}),e=React.createClass({displayName:"WorkerHeader",toggle:function(){this.props.toggleEditor(this.props.worker._id)},render:function(){return React.DOM.div({className:"row"},React.DOM.div({className:"small-9 columns"},React.DOM.h5(null,React.DOM.strong(null,this.props.worker.name))),React.DOM.div({className:"small-3 columns text-right"},this.props.worker.editable?React.DOM.a({onClick:this.toggle},React.DOM.i({className:"actionIco fi-x"}),"Cancelar"):
React.DOM.a({onClick:this.toggle},React.DOM.i({className:"actionIco fi-pencil"}),"Editar")))}}),f=React.createClass({displayName:"WorkerList",render:function(){return React.DOM.div(null,this.props.workers.map(function(a){return React.DOM.div({className:"WorkerHeader",key:a._id},e({worker:a,toggleEditor:this.props.toggleEdit}),a.editable?c({users:this.props.users,worker:a,saveWorker:this.props.saveWorker,deleteWorker:this.props.deleteWorker}):null)}.bind(this)))}});return React.createClass({displayName:"Workers",
getInitialState:function(){return{defaultWorker:{name:"",sys_id:"",user_id:""},workers:[],users:[]}},toggleEdit:function(a){var b=this.state.workers;if(a=_.find(b,{_id:a}))a.editable=!a.editable,this.setState({workers:b})},deleteWorker:function(a){return $.ajax({type:"DELETE",url:pager.urls.ajax+"admin/worker/"+a}).done(function(){if(this.isMounted()){var b=this.state.workers;_.remove(b,{_id:a});this.setState({workers:b})}}.bind(this))},saveWorker:function(a){a.editable&&(a=_.omit(a,"editable"));
return $.ajax({type:"POST",url:pager.urls.ajax+"admin/worker"+(a._id?"/"+a._id:""),contentType:"application/json; charset=utf-8",data:JSON.stringify({worker:a})}).done(function(){if(this.isMounted())if(a._id){var b=this.state.workers,c=_.find(b,{_id:a._id});c&&(_.merge(c,a),this.setState({workers:b}))}else this.reloadWorkers()}.bind(this))},setWorkers:function(a){this.isMounted()&&this.setState({workers:a})},setUsers:function(a){this.isMounted()&&this.setState({users:a})},reloadUsers:function(){$.get(pager.urls.ajax+
"admin/users").done(this.setUsers)},reloadWorkers:function(){$.get(pager.urls.ajax+"admin/workers").done(this.setWorkers)},componentDidMount:function(){this.reloadUsers();this.reloadWorkers()},render:function(){return React.DOM.div(null,f({workers:this.state.workers,users:this.state.users,deleteWorker:this.deleteWorker,toggleEdit:this.toggleEdit,saveWorker:this.saveWorker}),c({deleteWorker:this.deleteWorker,saveWorker:this.saveWorker,worker:this.state.defaultWorker,users:this.state.users}))}})});
