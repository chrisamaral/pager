define(["../ext/aviator/main", "./component.DateInput", "./console.queue", "./console.tasks", "./console.map", "./console.schedule", "../helpers/utils.js", "../ext/strftime"],function(h,x,y,z,A,B,C,f){function e(){this.data={};this.state={hasGoogleMaps:!1,mapState:pager.constant.console.map.AVAILABLE_TASKS};this.rootComponent=null}var k,l,m,n,p,q,r,s,g,t,u,v;LazyLoad.css(["/css/console.css"]);g=React.createClass({displayName:"UserLink",render:function(){return this.props.user.url?React.DOM.a({target:"_blank",
title:this.props.user.full_name,href:this.props.user.url},this.props.user.short_name):React.DOM.strong({title:this.props.user.full_name},this.props.user.short_name)}});v=React.createClass({displayName:"ObjectLink",render:function(){return React.DOM.span(null,this.props.object.adj?" "+this.props.object.adj:null,React.DOM.span(null," "),this.props.object.url?React.DOM.a({target:"_blank",href:this.props.object.url},this.props.object.name):React.DOM.strong(null,this.props.object.name))}});u=React.createClass({displayName:"AttrItem",
toggleTb:function(){$(this.getDOMNode()).closest("table").find("tbody>tr").not(".main-attr").toggle()},render:function(){var a=this.props.attr,b=React.addons.classSet({"main-attr":3===a.relevance,"important-attr":2===a.relevance}),c=3===a.relevance&&_.isString(a.value)?a.value.toUpperCase():a.value,d=3!==a.relevance&&a.descr;return React.DOM.tr({className:b,onClick:3===a.relevance?this.toggleTb:null},d?React.DOM.td(null,a.descr):null,React.DOM.td({colSpan:3!==a.relevance&&d?1:2,title:!d&&a.descr?
a.descr:""},a.url?React.DOM.a({href:a.url,target:"_blank"},c):c))}});t=React.createClass({displayName:"AttrTable",render:function(){var a=_.filter(this.props.attrs,{relevance:3}).concat(_.filter(this.props.attrs,{relevance:2})).concat(_.filter(this.props.attrs,function(a){return!a.relevance||1>=a.relevance}));return React.DOM.table({className:"attr-table"},React.DOM.tbody(null,a.map(function(a,c){return u({key:c,attr:a})})))}});p=React.createClass({displayName:"RouterWorker",drawMe:function(){this.props.worker.tasks.length&&
this.props.drawWorkerDirections(this.props.worker._id)},render:function(){return React.DOM.li({key:this.props.worker._id},React.DOM.a({onClick:this.drawMe},this.props.worker.name))}});n=React.createClass({displayName:"RouterWorkers",drawWorkerDirections:function(a){this.props.workers.forEach(function(b){b._id===a&&b.drawDirections()?this.props.toggleRouterMode(b._id,b.tasks.map(function(a){if(a.schedule){var d=[{relevance:3,value:b.name},{descr:"Tipos",value:_.uniq(a.types).join(", ")},{descr:"Deslocamento",
value:f("%H:%M",a.directions.schedule.ini)+" < "+a.directions.duration.text+" - "+a.directions.distance.text+" > "+f("%H:%M",a.directions.schedule.end)},{descr:"Execu\u00e7\u00e3o",value:f("%H:%M",a.schedule.ini)+" < "+Math.floor(a.duration/1E3/60)+"min > "+f("%H:%M",a.schedule.end)},{descr:"Dura\u00e7\u00e3o",value:Math.floor(a.duration/1E3/60)+"min"}],w=_.map(a.tasks,"_id");a.schedule.from&&a.schedule.to&&(!_.isDate(a.schedule.from)&&(a.schedule.from=new Date(a.schedule.from)),!_.isDate(a.schedule.to)&&
(a.schedule.to=new Date(a.schedule.to)),d.push({descr:"Agenda",value:f("%d/%m/%Y",a.schedule.from)}),d.push({descr:"Turno",value:f("%H:%M",a.schedule.from)+" <> "+f("%H:%M",a.schedule.to)}));w.length&&d.push({descr:"ID",value:w.join(", ")});a.target&&d.push({descr:"Cliente",value:a.target.name,relevance:2});d.push({value:a.address.address});return{id:"wRTask-"+a.id,worker:b.name,location:a.location,attrs:d}}})):(b._id!==a&&b.cleanDirections(),b._id===a&&this.props.toggleRouterMode(null))}.bind(this))},
render:function(){return React.DOM.div({id:"RouterWorkers"},React.DOM.ul(null,this.props.workers.map(function(a){return p({drawWorkerDirections:this.drawWorkerDirections,key:a._id,worker:a})}.bind(this))))}});m=React.createClass({displayName:"RouterController",getInitialState:function(){return{messages:[],workers:[],day:this.props.router._day}},componentDidMount:function(){this.props.router.progress(function(a,b){if(this.isMounted())switch(a){case "message":this.state.messages.push(b),this.setState({messages:this.state.messages})}}.bind(this));
this.props.router.done(function(a){this.isMounted()&&this.setState({workers:a})}.bind(this));this.props.router.fail(function(){this.isMounted()&&this.props.cancelRoute()}.bind(this))},cancel:function(){this.state.workers.forEach(function(a){a.cleanDirections()});this.props.cancelRoute()},save:function(){this.state.workers.forEach(function(a){a.cleanDirections()});this.props.saveRoute(this.state.workers,this.state.day)},render:function(){return React.DOM.div({id:"Router",className:"leftMapControl"},
React.DOM.div({className:"controlIco"},React.DOM.i({className:"fi-page-multiple"})),React.DOM.div({className:"controlContent"},React.DOM.h4(null,"Roteador"),React.DOM.div({className:"panel contained clearfix"},!this.state.workers.length&&React.DOM.div({id:"RouterLog"},this.state.messages.map(function(a,b){return React.DOM.p({key:b},a)})),n({workers:this.state.workers,toggleRouterMode:this.props.toggleRouterMode}),React.DOM.div({className:"row"},React.DOM.div({className:"text-right"},React.DOM.button({onClick:this.cancel,
className:"tiny alert button"},"Cancelar"),this.state.workers&&this.state.workers.length?React.DOM.button({onClick:this.save,className:"tiny success button"},"Salvar"):null)))))}});k=React.createClass({displayName:"ConsoleOpts",handleSubmit:function(a){a.preventDefault();a={day:this.refs.dayInput.getDOMNode().value,org:pager.org.id,locations:this.props.locations};h.navigate("/:org/console/:day/:locations",{namedParams:a})},render:function(){return React.DOM.div({id:"ConsoleOpts",className:"leftMapControl"},
React.DOM.div({className:"controlIco"},React.DOM.i({className:"fi-widget"})),React.DOM.div({className:"controlContent"},React.DOM.h4(null,"Op\u00e7\u00f5es da agenda"),React.DOM.div({className:"panel contained"},React.DOM.form({onSubmit:this.handleSubmit},React.DOM.div({className:"row"},React.DOM.div({className:"large-12 columns"},React.DOM.label(null,"Dia",x({ref:"dayInput",date:this.props.day,inputName:"day"})))),React.DOM.div({className:"row"},React.DOM.div({className:"large-12 columns text-right"},
React.DOM.button({className:"tiny success button"},"Ok")))))))}});l=React.createClass({displayName:"LeftPanel",componentDidMount:function(){$(this.getDOMNode()).on("click",".controlContent>h4,.controlIco",function(){$(this).closest(".leftMapControl").children(".controlContent,.controlIco").toggle();$("#ScrollRoot").trigger("resize")})},render:function(){return React.DOM.nav({id:"LeftPanel"},React.DOM.div({id:"LeftPanelWrapper"},this.props.pending.length?y({items:this.props.pending,locations:this.props.locations}):
null,k({day:this.props.day,locations:this.props.locations}),this.props.router&&m({router:this.props.router,saveRoute:this.props.saveRoute,cancelRoute:this.props.cancelRoute,toggleRouterMode:this.props.toggleRouterMode}),z({routeTasks:this.props.routeTasks,locations:this.props.locations,day:this.props.day,setTaskFocus:this.props.setTaskFocus,selectedTask:this.props.selectedTask,hasGoogleMaps:this.props.hasGoogleMaps,queries:this.props.queries,setQueries:this.props.setQueries})))}});r=React.createClass({displayName:"RightPanel",
componentDidMount:function(){var a=_.throttle(function(){if(!this.isMounted())return $("#ScrollRoot").off("resize",a);this.forceUpdate()}.bind(this),100);$("#ScrollRoot").on("resize",a)},render:function(){var a=$("#Console").width()-$("#LeftPanel").width();return React.DOM.main({id:"RightPanel",style:{width:a}},this.props.schedule.length?B({width:a,schedule:this.props.schedule}):null,this.props.routerLoader&&React.DOM.div(null,React.DOM.h4(null,"Configura\u00e7\u00f5es de Roteamento"),React.DOM.div({className:"panel"},
q({day:this.props.routerLoader._day,onSet:this.props.routerLoader}))))}});s=React.createClass({displayName:"Console",parseArgsToState:function(a){a=a||this.props;var b=a.args.day?a.args.day:(new Date).toYMD();a=(a=a.args.locations?a.args.locations:[])?_.isString(a)?a:_.isArray(a)?a.join(","):"":"";return{day:b,locations:a}},getInitialState:function(){return this.parseArgsToState()},componentWillReceiveProps:function(a){var b=a.args.day!==this.state.day;this.setState(this.parseArgsToState(a),function(){if(b){for(var c=
a.lib.data.schedule;0<c.length;)c.pop();this.updateSchedule()}this.updateDefaultQuery(b)}.bind(this))},offCanvasMenuOpen:function(){$("#ScrollRoot").scrollTop(0).css("overflow-y","scroll");$("#appContainer").css("overflow-y","hidden")},offCanvasMenuClose:function(){$("#ScrollRoot, #appContainer").css("overflow-y","")},componentDidMount:function(){this.updateDefaultQuery(!0);this.putArgs();var a=_.throttle(function(){if(!this.isMounted)return $(window).off("resize",a);this.forceUpdate()}.bind(this),
300);$(window).on("resize",a);this.componentWillUnmount.__interval=setInterval(this.updateSchedule,pager.constant.console.WHOLE_SCHEDULE_UPDATE_INTERVAL);this.updateSchedule();$(document).on("open.fndtn.offcanvas","[data-offcanvas]",this.offCanvasMenuOpen);$(document).on("close.fndtn.offcanvas","[data-offcanvas]",this.offCanvasMenuClose)},updateSchedule:function(){this.isMounted()&&$.get(pager.urls.ajax+"console/schedule/"+this.state.day).done(function(a){this.isMounted()&&this.props.lib.set("schedule",
a)}.bind(this))},componentWillUnmount:function(){clearInterval(this.componentWillUnmount.__interval);$(document).off("open.fndtn.offcanvas","[data-offcanvas]",this.offCanvasMenuOpen);$(document).off("close.fndtn.offcanvas","[data-offcanvas]",this.offCanvasMenuClose)},putArgs:function(){var a;a="/"+[pager.org.id,"console",this.state.day,this.state.locations].join("/");a!==h.getCurrentURI()&&h.navigate(a)},updateDefaultQuery:function(a){this.props.lib.setDefaultQuery(this.state.day,a)},setQueries:function(a){this.props.lib.set("queries",
a)},setTaskFocus:function(a){if(this.props.lib.state.selectedTask===a&&this.props.lib.state.mapState===pager.constant.console.map.SELECTED_TASK)return this.props.lib.state.selectedTask=null,this.props.lib.state.mapState=pager.constant.console.map.AVAILABLE_TASKS,this.props.lib.put();this.props.lib.state.mapState=pager.constant.console.map.SELECTED_TASK;this.props.lib.state.selectedTask=a;this.props.lib.put()},setMapState:function(a){this.props.lib.state.mapState=a;a!==pager.constant.console.map.SELECTED_TASK&&
(this.props.lib.state.selectedTask=void 0);this.props.lib.put()},toggleRouterMode:function(a,b){a?(this.props.lib.state.mapState=pager.constant.console.map.ROUTER_PROJECTION,this.props.lib.state.routerWorker={wayPoints:b}):(this.props.lib.state.mapState=pager.constant.console.map.AVAILABLE_TASKS,this.props.lib.state.routerWorker=null);this.props.lib.put()},killRoute:function(){this.props.lib.state.mapState===pager.constant.console.map.ROUTER_PROJECTION&&(this.props.lib.state.mapState=pager.constant.console.map.AVAILABLE_TASKS,
this.props.lib.state.routerWorker=null);this.props.lib.router.stopRouter();delete this.props.lib.router;this.props.lib.put()},saveRoute:function(a,b){function c(a){var b={address:a.address,location:a.location,directions:a.directions,duration:a.duration,schedule:a.schedule};a.ref&&a.target&&(b[a.ref]=a.target);b.tasks=_.map(a.tasks,function(a){return{task:a._id,attrs:a.attrs,type:a.type}});return b}var d=_.map(a,function(a){var b={worker:a._id,name:a.name,workShift:a.workShift,tasks:_.map(a.tasks,
c)};a.startPoint&&(b.startPoint=a.startPoint);a.endPoint&&(b.endPoint=a.endPoint);return b});$.ajax({type:"POST",url:pager.urls.ajax+"console/schedule/"+b,contentType:"application/json; charset=utf-8",data:JSON.stringify(d)});this.updateSchedule();this.killRoute()},cancelRoute:function(){this.killRoute()},initRouter:function(a){this.props.lib.startRouter(this.state.day,a,this)},render:function(){var a=$(window).height()-$(".tab-bar").outerHeight();return React.DOM.div({id:"Console",style:{"min-height":a}},
this.props.lib.state.hasGoogleMaps?A({queries:this.props.lib.data.queries,setTaskFocus:this.setTaskFocus,routerWorker:this.props.lib.state.routerWorker,mapState:this.props.lib.state.mapState,height:a,setMapState:this.setMapState,selectedTask:this.props.lib.state.selectedTask}):null,l({pending:this.props.lib.data.pending,routeTasks:this.initRouter,queries:this.props.lib.data.queries,toggleRouterMode:this.toggleRouterMode,saveRoute:this.saveRoute,cancelRoute:this.cancelRoute,day:this.state.day,router:this.props.lib.router,
locations:this.state.locations,hasGoogleMaps:this.props.lib.state.hasGoogleMaps,setQueries:this.setQueries,selectedTask:this.props.lib.state.selectedTask,setTaskFocus:this.setTaskFocus}),r({router:this.props.lib.router,schedule:this.props.lib.data.schedule,day:this.state.day,totalWidth:$(window).width(),routerLoader:this.props.lib.routerLoader,hasGoogleMaps:this.props.lib.state.hasGoogleMaps}))}});e.prototype.put=function(){Modernizr.localstorage&&localStorage.setItem("pager."+pager.org.id+".console.queries",
JSON.stringify(this.data.queries.filter(function(a){return"Agenda"!==a.name}).map(function(a){a=_.clone(a);a.tasks=[];return a})));this.rootComponent.setProps({lib:this})};e.prototype.set=function(a,b){"queries"===a&&(b=b.filter(function(a,b){return"Agenda"===a.name||a.tasks}).map(function(a){a.id=a.id||"query-"+Math.random().toString(36).substr(2);return a}));this.data[a]=b;this.put()};e.prototype.loadMaps=function(){console.log("loading google maps...");var a=this,b=Math.random().toString(36).substr(2),
c=function(){_.delay(function(){console.log("done loading google maps");window["Pager_"+b]&&delete window["Pager_"+b];a.state.hasGoogleMaps=!0;a.put()},500)};if("undefined"!==typeof google&&google.maps)return setTimeout(c,500);C.loadAPIKeys(function(a){window["Pager_"+b]=c;LazyLoad.js(["https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=true&key="+a.google+"&libraries=geometry&callback=Pager_"+b])}.bind(this))};e.prototype.startRouter=function(a,b,c){if(!this.router){Modernizr.webworkers||alert("Este navegador n\u00e3o suporta as tecnologias necess\u00e1rias para utiliza\u00e7\u00e3o do roteador. Por favor, atualize seu browser e tente novamente.");
var d=this;require(["../lib/router","./console.router.cfg"],function(e,f){q=f;c.isMounted()&&(d.routerLoader=function(c){delete d.routerLoader;c&&c.length&&(d.router=new e(a,b,c),d.router._day=a);d.put()},d.routerLoader._day=a,d.put())})}};e.prototype.setDefaultQuery=function(a,b){var c={id:"query-"+Math.random().toString(36).substr(2),name:"Agenda",tasks:[],query:{schedule:[a]}},d=_.findIndex(this.data.queries,{name:"Agenda"});if(0<=d){if(this.data.queries[d].query.schedule[0]===c.query.schedule[0])return;
this.data.queries[d]=c}else{if(!b)return;this.data.queries.unshift(c)}console.log("update day",a);this.put();this.fetchQueries()};e.prototype.fetchQueries=function(){this.data.queries.forEach(function(a,b){$.get(pager.urls.ajax+"console/tasks",a.query).done(function(b){_.isArray(b)&&(a.tasks=b,this.put())}.bind(this))}.bind(this))};e.prototype.fetchPendingOrders=function(){$.get("/json/console.pending.json").done(function(a){if(_.isString(a))try{a=JSON.parse(a)}catch(b){console.log(b),a=[]}this.data.pending=
a;this.put()}.bind(this))};e.prototype.init=function(a,b){var c;this.data={pending:[],queries:[],schedule:[]};if(Modernizr.localstorage){try{c=JSON.parse(localStorage.getItem("pager."+pager.org.id+".console.queries"))}catch(d){console.log(d)}this.data.queries=c&&c.length?this.data.queries.concat(c):this.data.queries}this.fetchQueries();this.rootComponent=a;b(this);this.fetchPendingOrders();this.loadMaps()};_.merge(pager.components,{UserLink:g,ObjectLink:v,AttrTable:t});g=new e;pager.console=g;return{component:s,
librarian:g}});
